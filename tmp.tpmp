#!/usr/bin/env bash

POSIXLY_CORRECT=yes

##############################################
#			 Global Variables				##
##############################################

DirCount=0
FileCount=0
rootDir="$PWD"
ignoredFiles=""
nFlag=false
Col=79
MaxLine=0



##############################################
##			counting each category			##
##############################################

count100=0
count1k=0
count10k=0
count100k=0
count1M=0
count10M=0
count100M=0
count1G=0
countBiger=0


##############################################
#			 	Functions					##
##############################################


updateCount() {
	echo $1 , $2
	if   [ $1 -le 100 ] 		; then 	#0 100 B
		count100=`expr count100 + 1`
	elif [ $1 -le 1024 ] 		; then 	#1 1KiB
		count1k=`expr count1k + 1`
	elif [ $1 -le 10240 ]		; then 	#2 10KiB
		count10k=`expr count10k + 1`
	elif [ $1 -le 102400 ]	; then 	#3 100KiB
		count100k=`expr count100k + 1`
	elif [ $1 -le 1048576 ]	; then 	#4 1MiB
		count1M=`expr count1M + 1`
	elif [ $1 -le 10485760 ]	; then 	#5 10MiB
		count10M=`expr count10M + 1`
	elif [ $1 -le 104857600 ]	; then 	#6 100MiB
		count100M=`expr count100M + 1`
	elif [ $1 -le 1073741824 ]; then 	#7 1GiB
		count1G=`expr count1G + 1`
	else 								#8 >1GiB
		countBiger=`expr countBiger + 1`
	fi
}


MainLoop() {
	#echo "$1"
	for file in `ls "$1"`; do  		#### TODO --quoting-style=[something]
		if [ -d "$1/$file" ]; then
			DirCount=`expr $DirCount + 1`
			MainLoop "$1/$file"
		else
			updateCount `du -B 1 "$1/$file"`
			FileCount=`expr $FileCount + 1`
		fi 
	done
}

drawLine() {
	count=$1
	Col=`expr $(tput cols) - 13`

	echo $1 $count $Col $ $MaxLine

	if [ nFlag ]; then
		count=`expr $count \* $Col`
		count=`expr $count / $MaxLine`
	elif [ count -gt $Col ]; then
		count=$Col
	fi 

	while [[ $count -gt 0 ]]; do
		echo -n "#"
		count=`expr $count - 1`
	done
}

getMaxLine() {
	for tmp in $@ ; do
		echo $tmp
		if [[ $tmp -gt $MaxLine ]]; then
			MaxLine=$tmp
		fi
	done
}

##############################################
## 				Get opt 					##
##############################################


while getopts ":ni:" opt; do
  case ${opt} in
    n ) nFlag=true
		shift
		;;
    i ) echo i ;shift
		;;
    \?) echo "Usage: $0 [-n] [directory]"; exit 1
    	;;
  esac
done



if [ "$1" != "" ]; then
	rootDir=$1
fi


##############################################
## 					Main 					##
##############################################

MainLoop $rootDir


echo "Root directory:" 		$rootDir
echo "Directories:"			$DirCount
echo "All files:" 			$FileCount
echo "File size histogram:"
	
	echo dbg -----------------
echo "  <100 B  :" $count100
echo "  <1 KiB  :" $count1k
echo "  <10 KiB :" $count10k
echo "  <100 KiB:" $count100k
echo "  <1 MiB  :" $count1M
echo "  <10 MiB :" $count10M
echo "  <100 MiB:" $count100M
echo "  <1 GiB  :" $count1G
echo "  >=1 GiB :" $countBiger
	echo dbg---------------------


if [ nFlag ]; then
	getMaxLine $count100 $count1k $count10k $count100k $count1M $count10M $count100M $count1G $countBiger 
fi


echo "  <100 B  :" $(drawLine count100)
echo "  <1 KiB  :" $(drawLine count1k)
echo "  <10 KiB :" $(drawLine count10k)
echo "  <100 KiB:" $(drawLine count100k)
echo "  <1 MiB  :" $(drawLine count1M)
echo "  <10 MiB :" $(drawLine count10M)
echo "  <100 MiB:" $(drawLine count100M)
echo "  <1 GiB  :" $(drawLine count1G)
echo "  >=1 GiB :" $(drawLine countBiger)
